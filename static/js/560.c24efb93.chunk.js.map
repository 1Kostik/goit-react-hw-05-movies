{"version":3,"file":"static/js/560.c24efb93.chunk.js","mappings":"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","sources":["components/BackLink.jsx","components/pages/MovieDetails/MovieDetails.styled.jsx","components/pages/MovieDetails/MovieDetails.jsx","components/services/api.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  width: 110px;\n  display: inline-flex;\n  -webkit-box-align: center;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  border: 1px solid #80808008;\n  border-radius: 10px;\n  margin-bottom: 20px;\n  border-shadow: gba(34, 60, 80, 0.6) 0px 3px 5px -1px;\n  box-shadow: rgb(255 255 255) 0px 0px 10px 4px;\n\n  :hover {\n    color: white;\n    background: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const WrapperContainer = styled.section`\n    padding: 0px 15px;\n    max-width: 100vw;\n`;\n\nexport const WrapperMain = styled.div`\n  display: flex;\n  margin: 20px;\n  align-items: center;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const WrapperText = styled.div`\n  height: 480px;\n  display: flex;\n  flex-direction: column;\n  margin-left: 50px;\n  justify-content: space-between;\n`;\nexport const WrapperAddInfo = styled.div`\n  display: flex;\n\n  flex-direction: column;\n\n  align-items: center;\n  h2 {\n    font-size: 35px;\n    margin-bottom: 20px;\n  }\n`;\nexport const AddInfo = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  padding: 0;\n  margin-bottom: 20px;\n`;\nexport const AddInfoName = styled.li`\n  border: 1px solid gray;\n  border-radius: 5px;\n  width: 100px;\n  text-align: center;\n  border-shadow: gba(34, 60, 80, 0.6) 0px 3px 5px -1px;\n  box-shadow: rgb(255 255 255) 0px 0px 10px 4px;\n\n  :hover {\n    background: orangered;\n    a {\n      color: white;\n    }\n  }\n`;\nexport const InfoLink = styled(Link)`\n  text-decoration: none;\n  font-size: 25px;\n  font-weight: 600;\n  &:hover {\n    color: #6a9bd8;\n  }\n  color: currentColor;\n`;\nexport const OverviewText = styled.p`\n  max-width: 800px;\n  font-weight: 400;\n  font-size: 20px;\n`;\nexport const Title = styled.h2`\n  font-size: 40px;\n\n`;\nexport const Another = styled.h2`\n  font-weight: 600;\n  font-size: 30px;\n \n`;\nexport const TextGenre = styled.li`\n  font-weight: 600;\n  font-size: 20px;\n  list-style:none;\n  margin-bottom:10px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { BackLink } from '../../BackLink';\nimport {\n  WrapperMain,\n  WrapperText,\n  Wrapper,\n  WrapperContainer,\n  WrapperAddInfo,\n  AddInfo,\n  AddInfoName,\n  InfoLink,\n  OverviewText,\n  Title,\n  Another,\n  TextGenre,\n} from './MovieDetails.styled';\nimport Loader from '../../Loader/Loader';\nimport { fetchMoviesId, IMAGE_URL } from '../../services/api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMoviesId(movieId)\n      .then(data => {\n        setMovie(data);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const genres = movie.genres;\n  const total = Math.floor(movie.vote_average * 10);\n  // const { poster_path, title, release_date, vote_average, overview, genres } =\n  //   movie;\n  //   const releaseDate = release_date.slice(0, 4);\n  //   const voteScore = vote_average.toFixed(1);\n  return (\n    <main>\n      <WrapperContainer>\n        <WrapperMain>\n          <Wrapper>\n            <BackLink to={backLinkHref} state={{ from: location }}>\n              Go back\n            </BackLink>\n            <div>\n              <img src={`${IMAGE_URL}${movie.poster_path}`} alt=\"\" />\n            </div>\n          </Wrapper>\n          <WrapperText>\n            <Title>\n              {movie.title}\n              {movie.name}\n              <span> ({movie.release_date.slice(0, 4)})</span>\n            </Title>\n            <Another>User score: {total}%</Another>\n            <Another>Overview:</Another>\n            <OverviewText> {movie.overview}</OverviewText>\n            <Another>Genres:</Another>\n            <p>\n              {genres &&\n                genres.map(genre => {\n                  return <TextGenre key={genre.id}>{genre.name}</TextGenre>;\n                })}\n            </p>\n          </WrapperText>\n        </WrapperMain>\n        <WrapperAddInfo>\n          <h2>Additional information</h2>\n          <AddInfo>\n            <AddInfoName>\n              <InfoLink to=\"cast\">Cast</InfoLink>\n            </AddInfoName>\n            <AddInfoName>\n              <InfoLink to=\"reviews\">Reviews</InfoLink>\n            </AddInfoName>\n          </AddInfo>\n        </WrapperAddInfo>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </WrapperContainer>\n      {isLoading && <Loader />}\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNmU0MGUwOWI3NDZlZTI2MWY4MmY5MTliZWI5MjgwOCIsInN1YiI6IjY0OGFjMDczMjYzNDYyMDBlYjc0NWJkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nrZ244O_eY9vRaeacdayZYNOixh-XOkGIuO3mgMPuaw',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMoviesId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return data;\n};\n\nexport const fetchMovieSearch = async queryName => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return data.results;\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","WrapperContainer","WrapperMain","Wrapper","WrapperText","WrapperAddInfo","AddInfo","AddInfoName","InfoLink","OverviewText","Title","Another","TextGenre","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","fetchMoviesId","then","data","catch","err","console","error","genres","total","Math","floor","vote_average","src","IMAGE_URL","poster_path","alt","title","name","release_date","slice","overview","map","genre","id","Suspense","fallback","Loader","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","results","fetchMovieSearch","queryName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}