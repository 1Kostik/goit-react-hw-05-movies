{"version":3,"file":"static/js/101.cdee8843.chunk.js","mappings":"gOAGaA,EAAYC,EAAAA,GAAAA,GAAH,sJASTC,EAAYD,EAAAA,GAAAA,GAAH,mbAeTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iSAkBTI,EAAWJ,EAAAA,GAAAA,IAAH,gLAURK,EAAYL,EAAAA,GAAAA,EAAH,8I,SCzBtB,EAnBmB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,YAA7B,OACV,SAACZ,EAAD,WACE,UAACC,EAAD,CAAWY,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA/C,WACE,SAACH,EAAD,CAAUa,IAAKC,EAAAA,GAAAA,OAAiBL,GAAcM,IAAI,MAClD,SAACd,EAAD,iBAAYM,QAAZ,IAAYA,EAAAA,EAASC,QAHTF,EADN,KAUjB,C,mHCxBYU,EAAYpB,EAAAA,GAAAA,IAAH,wIAgBTqB,GATcrB,EAAAA,GAAAA,IAAH,uHASHA,EAAAA,GAAAA,GAAH,wE,GAIEA,EAAAA,GAAAA,GAAH,mG,mCCSjB,EA1Ba,WACX,OAA4BsB,EAAAA,EAAAA,UAAS,MAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IAEbE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,GACVJ,GAAa,EACd,IACAK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,IACEzB,EAIL,OACE,UAACc,EAAD,YACE,SAACC,EAAD,UAAO,oBACP,SAACa,EAAA,EAAD,CAAY5B,OAAQA,IACnBkB,IAAa,SAACW,EAAA,EAAD,MAGnB,C,uNC5BKC,EAAW,gCAEJlB,EAAY,mCAEnBmB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOd,EAAmB,mCAAG,sGACVe,EAAAA,EAAAA,IAAA,UAClBN,EADkB,qCAErBC,GAH+B,uBACzBR,EADyB,EACzBA,KADyB,kBAK1BA,EAAKc,SALqB,2CAAH,qDAQnBC,EAAa,mCAAG,WAAMC,GAAN,yFACJH,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAA8BS,GAAWR,GADrC,uBACnBR,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbiB,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBN,EADkB,8BACYW,EADZ,WAErBV,GAH4B,uBACtBR,EADsB,EACtBA,KADsB,kBAKvBA,EAAKc,SALkB,2CAAH,sDAQhBK,EAAc,mCAAG,WAAMH,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAClBN,EADkB,iBACDS,EADC,YAErBR,GAH0B,uBACpBR,EADoB,EACpBA,KADoB,kBAKrBA,EAAKoB,MALgB,2CAAH,sDAQdC,EAAiB,mCAAG,WAAML,GAAN,yFACRH,EAAAA,EAAAA,IAAA,UAClBN,EADkB,iBACDS,EADC,YAErBR,GAH6B,uBACvBR,EADuB,EACvBA,KADuB,kBAKxBA,EAAKc,SALmB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/pages/Home/Home.styled.jsx","components/pages/Home/Home.jsx","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  padding: 0;\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0px 0px 10px 3px #ffffff, 3px 3px 5px rgba(0, 0, 0, 0.1);\n  transition: all 200ms ease-in-out;\n  :hover { \n     box-shadow: 0px 0px 10px orangered, 3px 3px 5px rgba(0, 0, 0, 0.1);\n  transition: all 200ms ease-in-out;\n   transform: scale(1.03);\n  cursor:pionter;\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  text-decoration: none;\n  &:hover img {\n    filter: grayscale(0);\n  }\n\n  &:hover p {\n    color: orangered;\n  }\n\n  color: currentColor;\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  filter: grayscale(0.4);\n  transition: all 200ms ease-in-out;\n  :hover {  \n   transform: scale(1.03);\n  cursor:pionter;\n}\n`;\n\nexport const MovieName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;\n//  object-fit: cover;\n//   transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// }\n// .MoviesItem","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { IMAGE_URL } from '../services/api';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieName,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(({ id, title, original_name, poster_path }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImg src={IMAGE_URL.concat(poster_path)} alt=\"\" />\n            <MovieName>{title ?? original_name}</MovieName>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  // display: grid;\n  // grid-template-columns: repeat(auto-fit, 200px);\n  // gap: 16px;\n  padding: 0 15px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\nexport const Name = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { useEffect, useState } from 'react';\nimport { Title, Container } from './Home.styled';\nimport MoviesList from '../../MoviesList/MoviesList';\nimport { fetchTrendingMovies } from '../../services/api';\nimport Loader from '../../Loader/Loader';\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchTrendingMovies()\n      .then(data => {\n        setMovies(data);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, []);\n  if (!movies) {\n    return;\n  }\n\n  return (\n    <Container>\n      <Title>Trending today</Title>\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n    </Container>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNmU0MGUwOWI3NDZlZTI2MWY4MmY5MTliZWI5MjgwOCIsInN1YiI6IjY0OGFjMDczMjYzNDYyMDBlYjc0NWJkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nrZ244O_eY9vRaeacdayZYNOixh-XOkGIuO3mgMPuaw',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMoviesId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return data;\n};\n\nexport const fetchMovieSearch = async queryName => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return data.results;\n};\n"],"names":["MovieList","styled","MovieItem","MovieLink","Link","MovieImg","MovieName","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","IMAGE_URL","alt","Container","Title","useState","setMovies","isLoading","setIsLoading","useEffect","fetchTrendingMovies","then","data","catch","err","console","error","MoviesList","Loader","BASE_URL","options","method","headers","accept","Authorization","axios","results","fetchMoviesId","movieId","fetchMovieSearch","queryName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}