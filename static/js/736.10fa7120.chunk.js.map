{"version":3,"file":"static/js/736.10fa7120.chunk.js","mappings":"gPAEaA,EAAOC,EAAAA,GAAAA,GAAH,sKAUJC,EAAOD,EAAAA,GAAAA,GAAH,sKAOJE,EAAMF,EAAAA,GAAAA,IAAH,sEAKHG,EAAOH,EAAAA,GAAAA,EAAH,oEAKJI,EAAYJ,EAAAA,GAAAA,EAAH,6CAITK,EAAUL,EAAAA,GAAAA,IAAH,+C,2BCmBpB,EA9Ca,WACX,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,IApBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAERC,IAILG,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GACJ,IAAKA,EAAKC,OAGR,OAFAT,EAAQ,WACRE,GAAa,GAGfF,EAAQQ,GACRN,GAAa,EACd,IACAQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACR,IAECJ,EAIL,OACE,UAACR,EAAD,WACmB,IAAhBQ,EAAKU,SAAgB,uBAAG,gDAExBV,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACzB,EAAD,YACE,SAACC,EAAD,CAAKyB,IAAKC,EAAAA,GAAAA,OAAiBJ,GAAeK,IAAI,MAC9C,UAACxB,EAAD,YACE,SAACF,EAAD,UAAOsB,KACP,SAACrB,EAAD,UAAYsB,SAJLH,EADH,IASTd,IAAa,SAACqB,EAAA,EAAD,MAGnB,C,uNCjDKC,EAAW,gCAEJH,EAAY,mCAEnBI,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCAErBC,GAH+B,uBACzBhB,EADyB,EACzBA,KADyB,kBAK1BA,EAAKuB,SALqB,2CAAH,qDAQnBC,EAAa,mCAAG,WAAM7B,GAAN,yFACJ2B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAA8BpB,GAAWqB,GADrC,uBACnBhB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbyB,EAAgB,mCAAG,WAAMC,GAAN,yFACPJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,8BACYW,EADZ,WAErBV,GAH4B,uBACtBhB,EADsB,EACtBA,KADsB,kBAKvBA,EAAKuB,SALkB,2CAAH,sDAQhBzB,EAAc,mCAAG,WAAMH,GAAN,yFACL2B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDpB,EADC,YAErBqB,GAH0B,uBACpBhB,EADoB,EACpBA,KADoB,kBAKrBA,EAAKT,MALgB,2CAAH,sDAQdoC,EAAiB,mCAAG,WAAMhC,GAAN,yFACR2B,EAAAA,EAAAA,IAAA,UAClBP,EADkB,iBACDpB,EADC,YAErBqB,GAH6B,uBACvBhB,EADuB,EACvBA,KADuB,kBAKxBA,EAAKuB,SALmB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin-top: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px 80px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  flex-basis: 200px;\n  border: 1px solid gray;\n  border-radius: 5px;\n  box-shadow: -2px -2px 5px #ffffff, 3px 3px 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 5px;\n  border-radius: 4px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nexport const Character = styled.p`\n  font-weight: 500;\n`;\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { List, Item, Img, Name, Character, Wrapper } from './Cast.styled';\nimport { IMAGE_URL, fetchMovieCast } from '../services/api';\nimport Loader from '../Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (!movieId) {\n      return;\n    }\n\n    fetchMovieCast(movieId)\n      .then(data => {\n        if (!data.length) {\n          setCast(null);\n          setIsLoading(false);\n          return;\n        }\n        setCast(data);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <List>\n      {cast.length === 0 && <p>Sorry, we don't have any cast on this movie</p>}\n\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Item key={id}>\n          <Img src={IMAGE_URL.concat(profile_path)} alt=\"\" />\n          <Wrapper>\n            <Name>{name}</Name>\n            <Character>{character}</Character>\n          </Wrapper>\n        </Item>\n      ))}\n      {isLoading && <Loader />}\n    </List>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNmU0MGUwOWI3NDZlZTI2MWY4MmY5MTliZWI5MjgwOCIsInN1YiI6IjY0OGFjMDczMjYzNDYyMDBlYjc0NWJkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nrZ244O_eY9vRaeacdayZYNOixh-XOkGIuO3mgMPuaw',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMoviesId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return data;\n};\n\nexport const fetchMovieSearch = async queryName => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return data.results;\n};\n"],"names":["List","styled","Item","Img","Name","Character","Wrapper","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieCast","then","data","length","catch","err","console","error","map","id","profile_path","name","character","src","IMAGE_URL","alt","Loader","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","results","fetchMoviesId","fetchMovieSearch","queryName","fetchMovieReviews"],"sourceRoot":""}