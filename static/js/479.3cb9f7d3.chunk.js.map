{"version":3,"file":"static/js/479.3cb9f7d3.chunk.js","mappings":"uPACaA,EAAUC,EAAAA,GAAAA,IAAH,0BAIPC,EAASD,EAAAA,GAAAA,KAAH,iEAINE,EAAQF,EAAAA,GAAAA,EAAH,+CAILG,EAAOH,EAAAA,GAAAA,GAAH,gDAGJI,EAASJ,EAAAA,GAAAA,GAAH,wF,kBC4BnB,EAvCgB,WACd,OAAwCK,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IATAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GACJR,EAAgBQ,GAChBN,GAAa,EACd,IACAO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACP,IACCJ,GAGAA,EAIL,OACE,UAACP,EAAD,WACGO,EAAac,OAAS,GACrB,wBACGd,EAAae,KAAI,SAAAC,GAAE,OAClB,UAACnB,EAAD,YACE,UAACD,EAAD,YACE,SAACD,EAAD,UAAQ,cACR,SAACA,EAAD,UAASqB,EAAGC,aAEd,uBAAID,EAAGE,YALEF,EAAGG,GADI,OAUnB,SAACrB,EAAD,UAAQ,+CACZI,IAAa,SAACkB,EAAA,EAAD,MAGnB,C,uNCzCKC,EAAW,gCAEJC,EAAY,mCAEnBC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBR,EADkB,qCAErBE,GAH+B,uBACzBd,EADyB,EACzBA,KADyB,kBAK1BA,EAAKqB,SALqB,2CAAH,qDAQnBC,EAAa,mCAAG,WAAM3B,GAAN,yFACJyB,EAAAA,EAAAA,IAAA,UAAaR,EAAb,iBAA8BjB,GAAWmB,GADrC,uBACnBd,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbuB,EAAgB,mCAAG,WAAMC,GAAN,yFACPJ,EAAAA,EAAAA,IAAA,UAClBR,EADkB,8BACYY,EADZ,WAErBV,GAH4B,uBACtBd,EADsB,EACtBA,KADsB,kBAKvBA,EAAKqB,SALkB,2CAAH,sDAQhBI,EAAc,mCAAG,WAAM9B,GAAN,yFACLyB,EAAAA,EAAAA,IAAA,UAClBR,EADkB,iBACDjB,EADC,YAErBmB,GAH0B,uBACpBd,EADoB,EACpBA,KADoB,kBAKrBA,EAAK0B,MALgB,2CAAH,sDAQd5B,EAAiB,mCAAG,WAAMH,GAAN,yFACRyB,EAAAA,EAAAA,IAAA,UAClBR,EADkB,iBACDjB,EADC,YAErBmB,GAH6B,uBACvBd,EADuB,EACvBA,KADuB,kBAKxBA,EAAKqB,SALmB,2CAAH,qD","sources":["components/Reviews/Reviews.stayled.jsx","components/Reviews/Reviews.jsx","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Wrapper = styled.div`\n\n`;\n\nexport const Author = styled.span`\n  font-size: 30px;\n  font-weight: 600;\n`;\nexport const Title = styled.p` \n  margin-bottom:10px\n`;\n\nexport const List = styled.li`\n  margin-bottom: 10px;\n`;\nexport const Answer = styled.h2`\n  font-size: 30px;\n  font-weight: 500;\n  text-align: center;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from '../services/api';\nimport { Wrapper, Author, Title, List, Answer } from './Reviews.stayled';\nimport Loader from '../Loader/Loader';\nconst Reviews = () => {\n  const [reviewsMovie, setReviewsMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieReviews(movieId)\n      .then(data => {\n        setReviewsMovie(data);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n  if (!reviewsMovie) {\n    return;\n  }\n  if (!reviewsMovie) {\n    return;\n  }\n\n  return (\n    <Wrapper>\n      {reviewsMovie.length > 0 ? (\n        <ul>\n          {reviewsMovie.map(el => (\n            <List key={el.id}>\n              <Title>\n                <Author>Author: </Author>\n                <Author>{el.author}</Author>\n              </Title>\n              <p>{el.content}</p>\n            </List>\n          ))}\n        </ul>\n      ) : (<Answer> WE don't have any reviews for this movie.</Answer>)}\n      {isLoading && <Loader />}\n    </Wrapper>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNmU0MGUwOWI3NDZlZTI2MWY4MmY5MTliZWI5MjgwOCIsInN1YiI6IjY0OGFjMDczMjYzNDYyMDBlYjc0NWJkNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nrZ244O_eY9vRaeacdayZYNOixh-XOkGIuO3mgMPuaw',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMoviesId = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}`, options);\n  return data;\n};\n\nexport const fetchMovieSearch = async queryName => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${queryName}&page=1`,\n    options\n  );\n  return data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits`,\n    options\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews`,\n    options\n  );\n  return data.results;\n};\n"],"names":["Wrapper","styled","Author","Title","List","Answer","useState","reviewsMovie","setReviewsMovie","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieReviews","then","data","catch","err","console","error","length","map","el","author","content","id","Loader","BASE_URL","IMAGE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","results","fetchMoviesId","fetchMovieSearch","queryName","fetchMovieCast","cast"],"sourceRoot":""}